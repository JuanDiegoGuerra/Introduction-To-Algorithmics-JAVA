package semana12;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.JTextField;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

import java.awt.Font;

public class Supermercado extends JFrame implements ActionListener {

	// Declaración de variables
	private static final long serialVersionUID = 9206324162700448001L;
	private JPanel contentPane;
	private JLabel lblPostre;
	private JLabel lblCantidad;
	private JComboBox<String> cboPostre;
	private JTextField txtCantidad;
	private JButton btnProcesar;
	private JButton btnBorrar;
	private JScrollPane scpScroll;
	private JTextArea txtS;

	// Lanza la aplicación
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Supermercado frame = new Supermercado();
					frame.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	// Crea la GUI
	public Supermercado() {
		setTitle("Empresa");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 409);

		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblPostre = new JLabel("Postre");
		lblPostre.setBounds(10, 11, 80, 14);
		contentPane.add(lblPostre);

		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setBounds(10, 36, 80, 14);
		contentPane.add(lblCantidad);

		cboPostre = new JComboBox<String>();
		cboPostre.setModel(new DefaultComboBoxModel<String>(new String[] {
				"Flan Royal", "Pud\u00EDn Royal", "Gelatina Royal", "Turrón La Florencia" }));
		cboPostre.setBounds(100, 8, 100, 20);
		contentPane.add(cboPostre);

		txtCantidad = new JTextField();
		txtCantidad.setBounds(100, 33, 100, 20);
		contentPane.add(txtCantidad);
		txtCantidad.setColumns(10);

		btnProcesar = new JButton("Procesar");
		btnProcesar.addActionListener(this);
		btnProcesar.setBounds(335, 7, 89, 23);
		contentPane.add(btnProcesar);

		btnBorrar = new JButton("Borrar");
		btnBorrar.addActionListener(this);
		btnBorrar.setBounds(335, 32, 89, 23);
		contentPane.add(btnBorrar);

		scpScroll = new JScrollPane();
		scpScroll.setBounds(10, 61, 414, 299);
		contentPane.add(scpScroll);

		txtS = new JTextArea();
		txtS.setFont(new Font("Monospaced", Font.PLAIN, 12));
		scpScroll.setViewportView(txtS);
	}

	// Direcciona eventos de tipo ActionEvent
	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == btnBorrar) {
			actionPerformedBtnBorrar(arg0);
		}
		if (arg0.getSource() == btnProcesar) {
			actionPerformedBtnProcesar(arg0);
		}
	}

	// Procesa la pulsación del botón Borrar
	protected void actionPerformedBtnBorrar(ActionEvent arg0) {
		txtCantidad.setText("");
		txtS.setText("");
		cboPostre.setSelectedIndex(0);
		txtCantidad.requestFocus();
	}

	// Declaración de variables globales
	int cven0, cven1, cven2;
	int cpos0, cpos1, cpos2;
	double itot0, itot1, itot2;

	// Procesa la pulsación del botón Procesar
	protected void actionPerformedBtnProcesar(ActionEvent arg0) {
		// Declaración de variables
		int pos, can;
		double icom, ides, ipag;

		// Entrada de datos
		pos = getPostre();
		can = getCantidad();

		// Proceso de cálculo
		icom = calcularImporteCompra(pos, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		efectuarIncrementos(pos, can, ipag);

		// Salida de resultados
		mostrarResultados(icom, ides, ipag);
	}

	void imprimir(String cad) {
		txtS.append(cad + "\n");
	}

	void mostrarResultados(double ic, double id, double ip) {
		txtS.setText("");
		imprimir("Importe compra................................: " + ic);
		imprimir("Importe descuento.............................: " + id);
		imprimir("Importe pagar.................................: " + ip);
		imprimir("Cantidad de ventas de Flan Royal..............: " + cven0);
		imprimir("Cantidad de ventas de Pudín Royal.............: " + cven1);
		imprimir("Cantidad de ventas de Gelatina Royal..........: " + cven2);
		imprimir("Cantidad de postres vendidos de Flan Royal....: " + cpos0);
		imprimir("Cantidad de postres vendidos de Pudín Royal...: " + cpos1);
		imprimir("Cantidad de postres vendidos de Gelatina Royal: " + cpos2);
		imprimir("Importe total acumulado de Flan Royal.........: " + itot0);
		imprimir("Importe total acumulado de Pudín Royal........: " + itot1);
		imprimir("Importe total acumulado de Gelatina Royal.....: " + itot2);
	}

	int getPostre() {
		return cboPostre.getSelectedIndex();
	}

	int getCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}

	double calcularImporteCompra(int p, int c) {
		switch (p) {
			case 0:
				return 2.8 * c;
			case 1:
				return 3.7 * c;
			case 2:
				return 4.8 * c;
			default:
				return 8.9*c;
		}
	}

	double calcularImporteDescuento(int c, double ic) {
		if (c >= 12)
			return 0.13 * ic;
		else if (c >= 8)
			return 0.11 * ic;
		else if (c >= 4)
			return 0.09 * ic;
		else
			return 0.07 * ic;

	}

	double calcularImportePagar(double ic, double id) {
		return ic - id;
	}

	void efectuarIncrementos(int p, int c, double ip) {
		switch (p) {
			case 0:
				cven0++;
				cpos0 += c;
				itot0 += ip;
				break;
			case 1:
				cven1++;
				cpos1 += c;
				itot1 += ip;
				break;
			default:
				cven2++;
				cpos2 += c;
				itot2 += ip;
		}
	}
}